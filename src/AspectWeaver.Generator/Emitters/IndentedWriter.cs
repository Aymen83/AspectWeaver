using System.Text;
using System.IO;
using System.CodeDom.Compiler;
using System;

namespace AspectWeaver.Generator.Emitters
{
    /// <summary>
    /// Helper class to facilitate clean, indented C# code generation.
    /// </summary>
    internal sealed class IndentedWriter : IDisposable
    {
        private readonly StringBuilder _sb;
        private readonly StringWriter _sw;
        private readonly IndentedTextWriter _writer;

        public IndentedWriter()
        {
            _sb = new StringBuilder();
            _sw = new StringWriter(_sb);
            // Use 4 spaces for indentation.
            _writer = new IndentedTextWriter(_sw, "    ");
        }

        public void Write(string s) => _writer.Write(s);
        public void WriteLine(string s) => _writer.WriteLine(s);
        public void WriteLine() => _writer.WriteLine();

        public void Indent() => _writer.Indent++;
        public void Outdent() => _writer.Indent--;

        public void OpenBlock()
        {
            WriteLine("{");
            Indent();
        }

        public void CloseBlock(string suffix = "")
        {
            Outdent();
            WriteLine("}" + suffix);
        }

        public override string ToString() => _sb.ToString();

        public void WriteFileHeader()
        {
            WriteLine("// <auto-generated>");
            WriteLine("// This file was generated by AspectWeaver. DO NOT EDIT.");
            WriteLine("// </auto-generated>");
            WriteLine();
            WriteLine("#nullable enable");
            WriteLine();
        }

        public void Dispose()
        {
            _writer.Dispose();
            _sw.Dispose();
        }
    }
}