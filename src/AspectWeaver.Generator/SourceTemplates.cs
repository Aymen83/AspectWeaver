namespace AspectWeaver.Generator
{
    /// <summary>
    /// Contains constant strings for C# source code templates used in generation.
    /// </summary>
    internal static class SourceTemplates
    {
        // We use a C# raw string literal for clean formatting.
        public const string InterceptsLocationAttributeSource = """
// <auto-generated>
// This file is generated by AspectWeaver.
// It defines the necessary attributes for C# 12 Interceptors.
// </auto-generated>

#nullable enable

namespace System.Runtime.CompilerServices
{
    using System;

    /// <summary>
    /// Allows a C# compiler to redirect an invocation to a different method (Interceptor).
    /// Note: This attribute must be defined internally as it is recognized intrinsically by the compiler.
    /// </summary>
    [AttributeUsage(AttributeTargets.Method, AllowMultiple = true, Inherited = false)]
    internal sealed class InterceptsLocationAttribute : Attribute
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InterceptsLocationAttribute"/> class.
        /// </summary>
        /// <param name="filePath">The path to the source file containing the invocation.</param>
        /// <param name="line">The line number of the invocation (1-based).</param>
        /// <param name="character">The character position within the line of the invocation (1-based).</param>
        public InterceptsLocationAttribute(string filePath, int line, int character)
        {
            // The compiler utilizes these parameters intrinsically; the body can be empty.
        }
    }
}
""";
    }
}