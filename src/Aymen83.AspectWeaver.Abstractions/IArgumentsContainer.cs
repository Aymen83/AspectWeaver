using System.Collections.Generic;
using System.ComponentModel;

namespace Aymen83.AspectWeaver.Abstractions
{
    /// <summary>
    /// Represents an optimized, read-only container for method arguments passed during an invocation.
    /// </summary>
    /// <remarks>
    /// This interface is typically implemented by specialized structs generated by AspectWeaver
    /// to avoid Dictionary allocations and minimize boxing. It is not intended for direct implementation by users.
    /// </remarks>
    // Hide from IntelliSense as it is infrastructure.
    [EditorBrowsable(EditorBrowsableState.Never)]
    public interface IArgumentsContainer : IEnumerable<KeyValuePair<string, object?>>
    {
        /// <summary>
        /// Gets the value of the argument with the specified parameter name.
        /// </summary>
        /// <param name="parameterName">The name of the parameter.</param>
        /// <returns>The value of the argument.</returns>
        object? this[string parameterName] { get; }

        /// <summary>
        /// Gets the number of arguments in the container.
        /// </summary>
        int Count { get; }
    }
}